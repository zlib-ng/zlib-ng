language: c
cache: ccache
dist: xenial
bundler_args: --retry 5

env:
  global:
    - BUILDDIR=.
    - MAKER="make -j2"
    - TESTER="make test"
    - CFLAGS="-O2 -g --coverage"
    - LDFLAGS="--coverage"

matrix:
  include:
    # Windows tests
    #   msvc/cmake
    - os: windows
      env:
        - GENERATOR="cmake . "
        - MAKER="cmake --build . --config Release"
        - TESTER="ctest --verbose -C Release"

    - os: windows
      env:
        - GENERATOR="cmake . -A x64"
        - MAKER="cmake --build . --config Release"
        - TESTER="ctest --verbose -C Release"

    - os: windows
      env:
        - GENERATOR="cmake ..\\zlib-ng -DZLIB_COMPAT=ON"
        - MAKER="cmake --build . --config Release"
        - TESTER="ctest --verbose -C Release"
        - BUILDDIR=..\\build


    # Linux x86-64 tests
    #   gcc/configure
    - os: linux
      compiler: gcc
      env: GENERATOR="./configure --warn"

    - os: linux
      compiler: gcc
      env: GENERATOR="./configure --warn --zlib-compat --without-optimizations --without-new-strategies"

    - os: linux
      compiler: gcc
      env:
        - GENERATOR="../zlib-ng/configure --warn --zlib-compat"
        - BUILDDIR=../build

    #   gcc/cmake
    - os: linux
      compiler: gcc
      env:
        - GENERATOR="cmake ."
        - TESTER="ctest --verbose -C Release"

    - os: linux
      compiler: gcc
      env:
        - GENERATOR="cmake . -DWITH_NEW_STRATEGIES=NO -DWITH_OPTIM=NO"
        - TESTER="ctest --verbose -C Release"

    - os: linux
      compiler: gcc
      env:
        - GENERATOR="cmake ../zlib-ng -DZLIB_COMPAT=ON"
        - TESTER="ctest --verbose -C Release"
        - BUILDDIR=../build

    #   clang/configure
    - os: linux
      compiler: clang
      env: GENERATOR="./configure --warn --zlib-compat"

    #   clang/cmake
    - os: linux
      compiler: clang
      env:
        - GENERATOR="cmake ../zlib-ng"
        - TESTER="ctest --verbose -C Release"
        - BUILDDIR=../build

    - os: linux
      compiler: clang
      env:
        - GENERATOR="scan-build -v --status-bugs cmake ../zlib-ng"
        - MAKER="scan-build -v --status-bugs make"
        - TESTER="ctest --verbose -C Release"
        - BUILDDIR=../build

    - os: linux
      compiler: clang
      env:
        - GENERATOR="scan-build -v --status-bugs cmake ../zlib-ng -DZLIB_COMPAT=ON"
        - MAKER="scan-build -v --status-bugs make"
        - TESTER="ctest --verbose -C Release"
        - BUILDDIR=../build

    #   gcc-9/cmake
    - os: linux
      compiler: gcc-9
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-9
      env:
        - CC=gcc-9
        - GENERATOR="cmake ."
        - TESTER="ctest --verbose -C Release"


    # OSX tests
    #   gcc/configure
    - os: osx
      compiler: gcc
      env: GENERATOR="./configure --warn"

    - os: osx
      compiler: gcc
      env:
        - GENERATOR="../zlib-ng/configure --warn --zlib-compat"
        - BUILDDIR=../build

    #   gcc/cmake
    - os: osx
      compiler: gcc
      env:
        - GENERATOR="cmake ."
        - TESTER="ctest --verbose -C Release"

    #   clang/configure
    - os: osx
      compiler: clang
      env: GENERATOR="./configure --warn --zlib-compat"

    #   clang/cmake
    - os: osx
      compiler: clang
      env:
        - GENERATOR="cmake ../zlib-ng"
        - TESTER="ctest --verbose -C Release"
        - BUILDDIR=../build


    # Linux ppc64le
    #   gcc/cmake
    - os: linux-ppc64le
      compiler: gcc
      env: GENERATOR="cmake ."

    - os: linux-ppc64le
      compiler: gcc
      env:
        - GENERATOR="cmake ../zlib-ng -DZLIB_COMPAT=ON"
        - TESTER="ctest --verbose -C Release"
        - BUILDDIR=../build

    #   clang/configure
    - os: linux-ppc64le
      compiler: clang
      env: GENERATOR="./configure --warn --zlib-compat"

    #   clang/cmake
    - os: linux-ppc64le
      compiler: clang
      env:
        - GENERATOR="cmake ../zlib-ng"
        - TESTER="ctest --verbose -C Release"
        - BUILDDIR=../build


    # Linux AARCH64, cross compiled + qemu
    #   gcc/configure
    - os: linux
      compiler: aarch64-linux-gnu-gcc
      addons:
        apt:
          packages:
            - qemu
            - gcc-aarch64-linux-gnu
            - libc-dev-arm64-cross
      # For all aarch64 implementations NEON is mandatory, while crypto/crc are not.
      env:
        - GENERATOR="./configure --warn"
        - CHOST=aarch64-linux-gnu

    - os: linux
      compiler: aarch64-linux-gnu-gcc
      addons:
        apt:
          packages:
            - qemu
            - gcc-aarch64-linux-gnu
            - libc-dev-arm64-cross
      env:
        - GENERATOR="../zlib-ng/configure --warn --zlib-compat"
        - CHOST=aarch64-linux-gnu
        - BUILDDIR=../build

    #   gcc/cmake
    - os: linux
      compiler: aarch64-linux-gnu-gcc
      addons:
        apt:
          packages:
            - qemu
            - gcc-aarch64-linux-gnu
            - libc-dev-arm64-cross
      # For all aarch64 implementations NEON is mandatory, while crypto/crc are not.
      env:
        - GENERATOR="cmake -DCMAKE_TOOLCHAIN_FILE=cmake/toolchain-aarch64.cmake . -DZLIB_COMPAT=ON"
        - MAKER="cmake --build . --config Release"
        - TESTER="ctest --verbose -C Release"

    - os: linux
      compiler: aarch64-linux-gnu-gcc
      addons:
        apt:
          packages:
            - qemu
            - gcc-aarch64-linux-gnu
            - libc-dev-arm64-cross
      env:
        - GENERATOR="cmake -DCMAKE_TOOLCHAIN_FILE=cmake/toolchain-aarch64.cmake ."
        - MAKER="cmake --build . --config Release"
        - TESTER="ctest --verbose -C Release"

    # Linux ARM Hard-float, cross compiled + qemu
    #   gcc/configure
    - os: linux
      compiler: arm-linux-gnueabihf-gcc
      addons:
        apt:
          packages:
            - qemu
            - gcc-arm-linux-gnueabihf
            - libc-dev-armhf-cross
      env:
        - GENERATOR="./configure --warn"
        - CHOST=arm-linux-gnueabihf

    - os: linux
      compiler: arm-linux-gnueabihf-gcc
      addons:
        apt:
          packages:
            - qemu
            - gcc-arm-linux-gnueabihf
            - libc-dev-armhf-cross
      env:
        - GENERATOR="./configure --warn --zlib-compat --without-neon"
        - CHOST=arm-linux-gnueabihf

    - os: linux
      compiler: arm-linux-gnueabihf-gcc
      addons:
        apt:
          packages:
            - qemu
            - gcc-arm-linux-gnueabihf
            - libc-dev-armhf-cross
      env:
        - GENERATOR="./configure --warn --zlib-compat"
        - CHOST=arm-linux-gnueabihf

    #   gcc/cmake
    - os: linux
      compiler: arm-linux-gnueabihf-gcc
      addons:
        apt:
          packages:
            - qemu
            - gcc-arm-linux-gnueabihf
            - libc-dev-armhf-cross
      env:
        - GENERATOR="cmake -DCMAKE_TOOLCHAIN_FILE=cmake/toolchain-arm.cmake . -DCMAKE_C_COMPILER_TARGET=arm-linux-gnueabihf"
        - MAKER="cmake --build . --config Release"
        - TESTER="ctest --verbose -C Release"

    - os: linux
      compiler: arm-linux-gnueabihf-gcc
      addons:
        apt:
          packages:
            - qemu
            - gcc-arm-linux-gnueabihf
            - libc-dev-armhf-cross
      env:
        - GENERATOR="cmake -DCMAKE_TOOLCHAIN_FILE=cmake/toolchain-arm.cmake . -DZLIB_COMPAT=ON -DWITH_NEON=OFF -DCMAKE_C_COMPILER_TARGET=arm-linux-gnueabihf"
        - MAKER="cmake --build . --config Release"
        - TESTER="ctest --verbose -C Release"

    - os: linux
      compiler: arm-linux-gnueabihf-gcc
      addons:
        apt:
          packages:
            - qemu
            - gcc-arm-linux-gnueabihf
            - libc-dev-armhf-cross
      env:
        - GENERATOR="cmake -DCMAKE_TOOLCHAIN_FILE=cmake/toolchain-arm.cmake . -DZLIB_COMPAT=ON -DCMAKE_C_COMPILER_TARGET=arm-linux-gnueabihf"
        - MAKER="cmake --build . --config Release"
        - TESTER="ctest --verbose -C Release"

    # Linux ARM Soft-float, cross compiled + qemu
    #   gcc/configure
    - os: linux
      compiler: arm-linux-gnueabi-gcc
      addons:
        apt:
          packages:
            - qemu
            - gcc-arm-linux-gnueabi
            - libc-dev-armel-cross
      env:
        - GENERATOR="./configure"
        - CHOST=arm-linux-gnueabi

    - os: linux
      compiler: arm-linux-gnueabi-gcc
      addons:
        apt:
          packages:
            - qemu
            - gcc-arm-linux-gnueabi
            - libc-dev-armel-cross
      env:
        - GENERATOR="./configure --zlib-compat"
        - CHOST=arm-linux-gnueabi

    #   gcc/cmake
    - os: linux
      compiler: arm-linux-gnueabi-gcc
      addons:
        apt:
          packages:
            - qemu
            - gcc-arm-linux-gnueabi
            - libc-dev-armel-cross
      env:
        - GENERATOR="cmake -DCMAKE_TOOLCHAIN_FILE=cmake/toolchain-arm.cmake . -DCMAKE_C_COMPILER_TARGET=arm-linux-gnueabi"
        - MAKER="cmake --build . --config Release"
        - TESTER="ctest --verbose -C Release"

    - os: linux
      compiler: arm-linux-gnueabi-gcc
      addons:
        apt:
          packages:
            - qemu
            - gcc-arm-linux-gnueabi
            - libc-dev-armel-cross
      env:
        - GENERATOR="cmake -DCMAKE_TOOLCHAIN_FILE=cmake/toolchain-arm.cmake . -DZLIB_COMPAT=ON -DCMAKE_C_COMPILER_TARGET=arm-linux-gnueabi"
        - MAKER="cmake --build . --config Release"
        - TESTER="ctest --verbose -C Release"

script:
  - mkdir -p $BUILDDIR
  - cd $BUILDDIR
  - $GENERATOR
  - $MAKER
  - $TESTER

after_success:
  - bash <(curl -s https://codecov.io/bash --connect-timeout 10 --retry 8 --retry-delay 10) -U "--connect-timeout 10 --retry 8 --retry-delay 10"
